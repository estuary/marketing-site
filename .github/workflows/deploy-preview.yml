name: Deploy to Firebase Preview

on:
  pull_request:

concurrency:
  group: preview-${{ github.ref }}

jobs:
  build_and_preview:
    runs-on: ubuntu-2004-large
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 20
      - name: Fetch base_ref HEAD to use it as Ancestor hash in LHCI
        run: git fetch --depth=1 origin +refs/heads/${{github.base_ref}}:refs/remotes/origin/${{github.base_ref}}
      - uses: actions/setup-node@v1
        with:
          node-version: '18.x'
      - name: Caching
        id: gatsby-cache-build
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            .cache
            public
          key: ${{ runner.os }}-gatsby-build-preview-${{github.head_ref}}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-preview-${{github.head_ref}}-
      - run: yarn install
      - run: yarn run build --log-pages
        env:
            CI: true
            STRAPI_API_URL: ${{ secrets.STRAPI_API_URL }}
            STRAPI_TOKEN: ${{ secrets.STRAPI_TOKEN }}
            GATSBY_DB_USER: ${{ secrets.GATSBY_DB_USER }}
            GATSBY_DB_PASS: ${{ secrets.GATSBY_DB_PASS }}
            GATSBY_DB_HOST: ${{ secrets.GATSBY_DB_HOST }}
            GATSBY_DB_PORT: ${{ secrets.GATSBY_DB_PORT }}
            GATSBY_DB_NAME: ${{ secrets.GATSBY_DB_NAME }}
      - name: Installing Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.13.x
      # @see https://github.com/GoogleChrome/lighthouse-ci/issues/138#issuecomment-561698511
      - name: Run Lighthouse CI
        id: lighthouse
        uses: actions/github-script@v6
        with: 
          script: |
            const lighthouseConfig = require('./lighthouserc');
        
            // Healthcheck
            await exec.exec('lhci', ['healthcheck', '--fatal']);

            // Desktop
            for await (const url of lighthouseConfig.ci.collect.url) {
                await exec.exec('lhci', ['collect', '--additive', '--url', url, '--psiStrategy', 'desktop', '--settings.preset', 'desktop']);
            };

            await exec.exec('lhci', ['assert']);
            await exec.exec('lhci', ['upload', '--githubStatusContextSuffix', '/desktop']);

            // Cleanup
            await exec.exec('rm', ['-fr', '.lighthouseci']);

            // Mobile
            for await (const url of lighthouseConfig.ci.collect.url) {
                await exec.exec('lhci', ['collect', '--additive', '--url', url, '--psiStrategy', 'mobile']);
            };

            await exec.exec('lhci', ['assert']);
            await exec.exec('lhci', ['upload', '--githubStatusContextSuffix', '/mobile']);
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          LHCI_TOKEN: ${{ secrets.LHCI_TOKEN }}
          LHCI_BASIC_AUTH_USERNAME: ${{ secrets.LHCI_BASIC_AUTH_USERNAME }}
          LHCI_BASIC_AUTH_PASSWORD: ${{ secrets.LHCI_BASIC_AUTH_PASSWORD }}
      - uses: FirebaseExtended/action-hosting-deploy@v0
        id: firebase
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          expires: 30d
          projectId: estuary-marketing
      - run: echo ${{steps.firebase.outputs.urls}}